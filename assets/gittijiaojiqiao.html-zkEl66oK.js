import{_ as l,r as t,o as c,c as p,b as s,d as n,e,a as i}from"./app-De5JuplM.js";const r={},o={href:"https://learngitbranching.js.org/?locale=zh_CN&NODEMO=",target:"_blank",rel:"noopener noreferrer"},d=s("h2",{id:"使用-shell-脚本提取-package-json-版本",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#使用-shell-脚本提取-package-json-版本"},[s("span",null,"使用 shell 脚本提取 package.json 版本")])],-1),u={href:"http://www.longant.cn/zh-hans/node/6056",target:"_blank",rel:"noopener noreferrer"},m={href:"https://stackoverflow.com/questions/44833218/extract-package-json-version-using-shell-script",target:"_blank",rel:"noopener noreferrer"},v=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 方法一</span></span>
<span class="line"><span class="token assign-left variable">VERSION</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">node</span> <span class="token parameter variable">-e</span> &quot;<span class="token punctuation">(</span><span class="token function-name function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console.log<span class="token punctuation">(</span>require<span class="token punctuation">(</span><span class="token string">&#39;./package.json&#39;</span><span class="token punctuation">)</span>.version<span class="token variable">)</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token string">&quot;)</span>
<span class="line"># 方法二</span>
<span class="line">sed &#39;s/.*&quot;</span>version<span class="token string">&quot;: &quot;</span><span class="token punctuation">\\</span><span class="token punctuation">(</span>.*<span class="token punctuation">\\</span><span class="token punctuation">)</span><span class="token string">&quot;.*/<span class="token entity" title="\\1">\\1</span>/;t;d&#39; ./package.json</span>
<span class="line"># 方法三</span>
<span class="line">NODE_VERSION=$(node -p -e &quot;require(&#39;./package.json&#39;).version&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">$NODE_VERSION</span></span>
<span class="line"><span class="token comment"># 方法四</span></span>
<span class="line"><span class="token function">awk</span> -F<span class="token string">&#39;&quot;&#39;</span> <span class="token string">&#39;/&quot;version&quot;: &quot;.+&quot;/{ print $4; exit; }&#39;</span> package.json</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分支操作" tabindex="-1"><a class="header-anchor" href="#分支操作"><span>分支操作</span></a></h2><h3 id="查看分支" tabindex="-1"><a class="header-anchor" href="#查看分支"><span>查看分支</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># git branch不带参数,列出本地已经存在的分支，并且在当前分支的前面用*标记，加上-a参数可以查看所有分支列表，包括本地和远程，远程分支一般会用红色字体标记出来</span></span>
<span class="line"><span class="token function">git</span> branch <span class="token parameter variable">-a</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="切换分支" tabindex="-1"><a class="header-anchor" href="#切换分支"><span>切换分支</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 其中远程分支为 origin/master</span></span>
<span class="line"><span class="token comment"># 本地分支为 master</span></span>
<span class="line"><span class="token function">git</span> checkout master</span>
<span class="line"><span class="token function">git</span> checkout S32K146</span>
<span class="line"><span class="token function">git</span> checkout S32K148</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="新建分支并切换到指定分支" tabindex="-1"><a class="header-anchor" href="#新建分支并切换到指定分支"><span>新建分支并切换到指定分支</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># git checkout -b 本地分支名 origin/远程分支名</span></span>
<span class="line"><span class="token comment"># 当参数设置为“-b”时，可以在新分支创建的同时切换分支</span></span>
<span class="line"><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> S32K146 origin/S32K146</span>
<span class="line"><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> S32K148 origin/S32K148</span>
<span class="line"><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> Vue3MasterReWi origin/Vue3MasterReWi</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="把远程分支拉到本地" tabindex="-1"><a class="header-anchor" href="#把远程分支拉到本地"><span>把远程分支拉到本地</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> fetch origin S32K146</span>
<span class="line"><span class="token function">git</span> fetch origin S32K148</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="远程分支上的内容都拉取到本地" tabindex="-1"><a class="header-anchor" href="#远程分支上的内容都拉取到本地"><span>远程分支上的内容都拉取到本地</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> pull origin S32K146</span>
<span class="line"><span class="token function">git</span> pull origin S32K148</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="将本地分支推送到远程" tabindex="-1"><a class="header-anchor" href="#将本地分支推送到远程"><span>将本地分支推送到远程</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span></span>
<span class="line"><span class="token function">git</span> push <span class="token parameter variable">-u</span> origin S32K146:S32K146</span>
<span class="line"><span class="token function">git</span> push <span class="token parameter variable">-u</span> origin S32K148:S32K148</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="git-push-u-简单理解" tabindex="-1"><a class="header-anchor" href="#git-push-u-简单理解"><span>git push -u 简单理解</span></a></h3>`,15),h={href:"https://blog.csdn.net/weixin_48321825/article/details/124431351",target:"_blank",rel:"noopener noreferrer"},b=i(`<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">第一次提交需要加 -u参数后，</span>
<span class="line">以后即可直接用git push代替git push origin master</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="commit-code-for-multiple-people" tabindex="-1"><a class="header-anchor" href="#commit-code-for-multiple-people"><span>Commit code for multiple people</span></a></h2><h3 id="git-pull-可用" tabindex="-1"><a class="header-anchor" href="#git-pull-可用"><span>git pull 可用</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 先查看状态，是否有改动</span></span>
<span class="line"><span class="token function">git</span> status</span>
<span class="line"><span class="token comment"># git stash save &quot;名字&quot; 将修改内容保存在堆栈中</span></span>
<span class="line"><span class="token function">git</span> stash save</span>
<span class="line"><span class="token comment"># 先git pull,拉取远程仓库所有分支更新并合并到本地</span></span>
<span class="line"><span class="token function">git</span> pull origin master</span>
<span class="line"><span class="token comment"># git stash pop（或git stash pop +名字）将堆栈中的修改应用到当前分支</span></span>
<span class="line"><span class="token function">git</span> stash pop</span>
<span class="line"><span class="token comment"># 查看修改，如果有冲突需要手动修改冲突</span></span>
<span class="line"><span class="token function">git</span> status</span>
<span class="line"><span class="token comment"># 把更新的代码添加到暂存区， git add [xxx]  //xxx为文件名，</span></span>
<span class="line"><span class="token comment"># git add . 会把本地所有untrack的文件都加入暂存区，并且会根据.gitignore做过滤。</span></span>
<span class="line"><span class="token comment"># git add * 会忽略.gitignore把任何文件都加入。</span></span>
<span class="line"><span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">--all</span></span>
<span class="line"><span class="token comment"># 将暂存区的更新提交到仓库区。</span></span>
<span class="line"><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;【更新】更新说明&quot;</span></span>
<span class="line"><span class="token comment"># 将本地分支的更新全部推送到远程仓库。</span></span>
<span class="line"><span class="token function">git</span> push <span class="token parameter variable">-u</span> origin HEAD:master</span>
<span class="line"><span class="token comment"># 再次查看状态，看是否还有文件没推送</span></span>
<span class="line"><span class="token function">git</span> status</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="git-fetch-不好用" tabindex="-1"><a class="header-anchor" href="#git-fetch-不好用"><span>git fetch 不好用</span></a></h3>`,5),g={href:"https://blog.csdn.net/m0_47403102/article/details/122538395",target:"_blank",rel:"noopener noreferrer"},k={href:"https://blog.csdn.net/m0_47403102/article/details/122538395",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.cnblogs.com/linhuaming/p/16290892.html",target:"_blank",rel:"noopener noreferrer"},_=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 获取最新代码到本地【获取远端的origin/master分支】</span></span>
<span class="line"><span class="token function">git</span> fetch origin master</span>
<span class="line"><span class="token comment"># 查看版本差异【查看本地master与远端origin/master的版本差异】</span></span>
<span class="line"><span class="token function">git</span> log <span class="token parameter variable">-p</span> master<span class="token punctuation">..</span>origin/master</span>
<span class="line"><span class="token comment"># 合并最新代码到本地分支【合并远端分支origin/master到当前分支】</span></span>
<span class="line"><span class="token function">git</span> merge origin/master</span>
<span class="line"><span class="token comment"># 先查看状态，是否有改动</span></span>
<span class="line"><span class="token function">git</span> status</span>
<span class="line"><span class="token comment"># 把更新的代码添加到暂存区， git add [xxx]  //xxx为文件名，</span></span>
<span class="line"><span class="token comment"># git add . 会把本地所有untrack的文件都加入暂存区，并且会根据.gitignore做过滤。</span></span>
<span class="line"><span class="token comment"># git add * 会忽略.gitignore把任何文件都加入。</span></span>
<span class="line"><span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">--all</span></span>
<span class="line"><span class="token comment"># 将暂存区的更新提交到仓库区。</span></span>
<span class="line"><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;Initial Commit&quot;</span></span>
<span class="line"><span class="token comment"># 将本地分支的更新全部推送到远程仓库。</span></span>
<span class="line"><span class="token function">git</span> push <span class="token parameter variable">-u</span> origin HEAD:master</span>
<span class="line"><span class="token comment"># 再次查看状态，看是否还有文件没推送</span></span>
<span class="line"><span class="token function">git</span> status</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="修改远程提交" tabindex="-1"><a class="header-anchor" href="#修改远程提交"><span>修改远程提交</span></a></h2>`,2),q={href:"https://blog.csdn.net/Zsago/article/details/73618279",target:"_blank",rel:"noopener noreferrer"},x=s("h2",{id:"删除-分两种情况",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#删除-分两种情况"},[s("span",null,"删除(分两种情况)")])],-1),E={href:"https://www.jb51.net/article/253630.htm",target:"_blank",rel:"noopener noreferrer"},I=i(`<h3 id="_1-删除最后一次提交" tabindex="-1"><a class="header-anchor" href="#_1-删除最后一次提交"><span>1. 删除最后一次提交</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 第一步：回滚上一次提交</span></span>
<span class="line"><span class="token function">git</span> reset <span class="token parameter variable">--hard</span> HEAD^</span>
<span class="line"><span class="token comment"># 第二步：强制提交本地代码</span></span>
<span class="line"><span class="token function">git</span> push origin master <span class="token parameter variable">-f</span></span>
<span class="line"><span class="token comment"># 由于本地reset之后本地库落后于远程几个版本，所以需要使用-f强制提交。</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-删除指定-commit-提交-非最后一次提交" tabindex="-1"><a class="header-anchor" href="#_2-删除指定-commit-提交-非最后一次提交"><span>2. 删除指定 commit 提交（非最后一次提交）</span></a></h3>`,3),A={href:"https://blog.csdn.net/qq_34246965/article/details/108414930",target:"_blank",rel:"noopener noreferrer"},T=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 第一步：查看提交日志，获取要删除记录commit--2的前一次提交commit--1的提交ID</span></span>
<span class="line"><span class="token comment"># 特别提示： rebase -i的ID一定是删除记录的前一次的提交ID</span></span>
<span class="line"><span class="token comment"># git reflog命令中保留了从clone仓库开始,用户所有在本地库中的操作。</span></span>
<span class="line"><span class="token function">git</span> reflog</span>
<span class="line"><span class="token comment"># 如果不带任何参数，它会列出所有历史记录，最近的排在最上方，显示提交对象的哈希值，作者、提交日期、和提交说明。如果记录过多，则按Page Up、Page Down、↓、↑来控制显示；按q退出历史记录列表。</span></span>
<span class="line"><span class="token function">git</span> log</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="强制提交" tabindex="-1"><a class="header-anchor" href="#强制提交"><span>强制提交</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> clone <span class="token operator">&lt;</span>仓库<span class="token operator">&gt;</span></span>
<span class="line"><span class="token function">git</span> reset <span class="token parameter variable">--hard</span> HEAD^</span>
<span class="line"></span>
<span class="line">// <span class="token keyword">do</span> something</span>
<span class="line"></span>
<span class="line"><span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">--all</span></span>
<span class="line"><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;first commit&quot;</span></span>
<span class="line"><span class="token function">git</span> push <span class="token parameter variable">-u</span> <span class="token parameter variable">-f</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git-清除贡献者信息和历史提交记录" tabindex="-1"><a class="header-anchor" href="#git-清除贡献者信息和历史提交记录"><span>Git 清除贡献者信息和历史提交记录</span></a></h2>`,4),M={href:"https://blog.csdn.net/Liu_Wd/article/details/120910899",target:"_blank",rel:"noopener noreferrer"},N=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment">#1.Checkout</span></span>
<span class="line"><span class="token comment"># 检出新的分支</span></span>
<span class="line"><span class="token comment"># orphan参数用于创建没有commit记录的分支</span></span>
<span class="line"><span class="token function">git</span> checkout <span class="token parameter variable">--orphan</span> latest_branch</span>
<span class="line"><span class="token comment">#2.Add all the files</span></span>
<span class="line"><span class="token comment"># 添加分支的所有文件</span></span>
<span class="line"><span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">-A</span></span>
<span class="line"><span class="token comment">#3.Commit the changes</span></span>
<span class="line"><span class="token comment">#提交更改并写明提交描述</span></span>
<span class="line"><span class="token function">git</span> commit <span class="token parameter variable">-am</span> <span class="token string">&quot;这是我提交的描述&quot;</span></span>
<span class="line"><span class="token comment">#4.Delete the branch</span></span>
<span class="line"><span class="token comment">#删除之前的主分支</span></span>
<span class="line"><span class="token function">git</span> branch <span class="token parameter variable">-D</span> master</span>
<span class="line"><span class="token comment">#5.Rename the current branch to master</span></span>
<span class="line"><span class="token comment">#将当前这个分支重命名为master，是它变成主分支</span></span>
<span class="line"><span class="token function">git</span> branch <span class="token parameter variable">-m</span> master</span>
<span class="line"><span class="token comment">#6.Finally, force update your repository</span></span>
<span class="line"><span class="token comment">#最后，强制更新到主分支master</span></span>
<span class="line"><span class="token function">git</span> push <span class="token parameter variable">-f</span> origin master</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git-仓库迁移不修改" tabindex="-1"><a class="header-anchor" href="#git-仓库迁移不修改"><span>git 仓库迁移不修改</span></a></h2>`,2),R={href:"https://blog.csdn.net/qq_42670703/article/details/123369326",target:"_blank",rel:"noopener noreferrer"},j=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 1. 随便找个文件夹，从原地址克隆一份裸版本库</span></span>
<span class="line"><span class="token function">git</span> clone <span class="token parameter variable">--bare</span> 旧的git地址</span>
<span class="line"><span class="token comment"># 2. 推送裸版本库到新的地址</span></span>
<span class="line"><span class="token builtin class-name">cd</span> xxx.git</span>
<span class="line"><span class="token function">git</span> push <span class="token parameter variable">--mirror</span> 新的git地址</span>
<span class="line"><span class="token comment"># 3. 删掉xxx.git文件夹</span></span>
<span class="line"><span class="token comment">#删不删无所谓，只是说明它没有用了而已。</span></span>
<span class="line"><span class="token comment">#4. 代码迁移就成功了，接下来就可以使用新的地址了</span></span>
<span class="line"><span class="token function">git</span> clone 新的git地址</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git-仓库迁移修改" tabindex="-1"><a class="header-anchor" href="#git-仓库迁移修改"><span>git 仓库迁移修改</span></a></h2><h3 id="git-修改当前项目仓库地址" tabindex="-1"><a class="header-anchor" href="#git-修改当前项目仓库地址"><span>git 修改当前项目仓库地址</span></a></h3>`,3),w={href:"https://blog.csdn.net/halo1416/article/details/123566471",target:"_blank",rel:"noopener noreferrer"},W=i(`<p>方法 1： 删除本地仓库当前关联的无效远程地址，再为本地仓库添加新的远程仓库地址</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> remote <span class="token parameter variable">-v</span>                       // 查看git对应的远程仓库地址</span>
<span class="line"><span class="token function">git</span> remote <span class="token function">rm</span> origin                // 删除关联对应的远程仓库地址</span>
<span class="line"><span class="token function">git</span> remote <span class="token parameter variable">-v</span>                       // 查看是否删除成功，如果没有任何返回结果，表示OK</span>
<span class="line"><span class="token function">git</span> remote <span class="token function">add</span> origin <span class="token string">&quot;新的仓库地址&quot;</span> // 重新关联git远程仓库地址</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方法 2： 直接修改本地仓库所关联的远程仓库的地址</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> remote                                                              // 查看远程仓库名称：origin</span>
<span class="line"><span class="token function">git</span> remote get-url origin                  // 查看远程仓库地址</span>
<span class="line"><span class="token function">git</span> remote set-url origin <span class="token string">&quot;新的仓库地址&quot;</span>    // <span class="token punctuation">(</span> 如果未设置ssh-key，此处仓库地址为 http://<span class="token punctuation">..</span>. 开头<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方法 3： 修改 .git/config 配置文件</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token builtin class-name">cd</span> .git      // 进入.git目录</span>
<span class="line"><span class="token function">vim</span> config   // 修改config配置文件，快速找到remote <span class="token string">&quot;origin&quot;</span>下面的url并替换即可实现快速关联和修改</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="更新作者" tabindex="-1"><a class="header-anchor" href="#更新作者"><span>更新作者</span></a></h3>`,7),y={href:"https://blog.csdn.net/qq_20515461/article/details/109270949",target:"_blank",rel:"noopener noreferrer"},O=i(`<h4 id="修改默认提交时的作者信息" tabindex="-1"><a class="header-anchor" href="#修改默认提交时的作者信息"><span>修改默认提交时的作者信息</span></a></h4><p>全局修改：本机所有 git 仓库均被改变</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">&quot;ReWi&quot;</span></span>
<span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">&quot;RejoiceWindow@yeah.com&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>当前仓库：只修改当前仓库</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> config user.name <span class="token string">&quot;ReWi&quot;</span></span>
<span class="line"><span class="token function">git</span> config user.email <span class="token string">&quot;RejoiceWindow@yeah.com&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="修改已经提交的作者信息" tabindex="-1"><a class="header-anchor" href="#修改已经提交的作者信息"><span>修改已经提交的作者信息</span></a></h4>`,6),G={href:"https://blog.csdn.net/mocoe/article/details/84344411",target:"_blank",rel:"noopener noreferrer"},L=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> log</span>
<span class="line"><span class="token comment"># amend命令只会修改最后一次commit的信息，之前的commit需要使用rebase</span></span>
<span class="line"><span class="token function">git</span> rebase <span class="token parameter variable">-i</span> HEAD~3</span>
<span class="line"><span class="token comment"># 要修改哪个，就把那行的pick改为edit，然后退出。例如想修改commit 1的author，光标移到第一个pick，按i键进入INSERT模式，把pick改为edit：</span></span>
<span class="line">edit <span class="token number">1</span> commit <span class="token number">1</span></span>
<span class="line">pick <span class="token number">2</span> commit <span class="token number">2</span></span>
<span class="line">pick <span class="token number">3</span> commit <span class="token number">3</span></span>
<span class="line"><span class="token punctuation">..</span>.</span>
<span class="line">-- INSERT --</span>
<span class="line"><span class="token comment"># 然后按esc键，退出INSERT模式，输入:wq退出，这时可以看到提示，可以修改commit 1的信息了：</span></span>
<span class="line">输入amend命令重置用户信息：</span>
<span class="line"><span class="token function">git</span> commit <span class="token parameter variable">--amend</span> --reset-author</span>
<span class="line">会出现commit <span class="token number">1</span>的提交记录及注释内容，可进入INSERT模式修改注释，:wq退出。这时再查看提交历史，发现commit <span class="token number">1</span>的author已经变成b<span class="token punctuation">(</span>b@email.com<span class="token punctuation">)</span>了，且是最新一次记录。</span>
<span class="line">通过continue命令回到正常状态：</span>
<span class="line"><span class="token function">git</span> rebase <span class="token parameter variable">--continue</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="批量修改已经提交的作者和时间戳信息" tabindex="-1"><a class="header-anchor" href="#批量修改已经提交的作者和时间戳信息"><span>批量修改已经提交的作者和时间戳信息</span></a></h3>`,2),$={href:"https://blog.csdn.net/qq_20515461/article/details/109270949",target:"_blank",rel:"noopener noreferrer"},S=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> filter-branch --env-filter <span class="token string">&#39;</span>
<span class="line">WRONG_EMAIL=&quot;ReWi@rewi.xyz&quot;</span>
<span class="line">NEW_NAME=&quot;ReWi&quot;</span>
<span class="line">NEW_EMAIL=&quot;RejoiceWindow@yeah.com&quot;</span>
<span class="line"></span>
<span class="line">if [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;$WRONG_EMAIL&quot; ]</span>
<span class="line">then</span>
<span class="line">     export GIT_AUTHOR_DATE=&quot;Thu Feb 18 14:00 2021 +0000&quot;</span>
<span class="line">     export GIT_AUTHOR_NAME=&quot;$NEW_NAME&quot;</span>
<span class="line">     export GIT_AUTHOR_EMAIL=&quot;$NEW_EMAIL&quot;</span>
<span class="line">fi &#39;</span> --tag-name-filter <span class="token function">cat</span> -- <span class="token parameter variable">--branches</span> <span class="token parameter variable">--tags</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更新提交记录的贡献者和时间戳" tabindex="-1"><a class="header-anchor" href="#更新提交记录的贡献者和时间戳"><span>更新提交记录的贡献者和时间戳</span></a></h2>`,2),C={href:"https://www.cnblogs.com/fe-linjin/p/10814935.html",target:"_blank",rel:"noopener noreferrer"},D=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> log</span>
<span class="line"><span class="token comment"># git rebase -i HEAD~6</span></span>
<span class="line"><span class="token function">git</span> rebase <span class="token parameter variable">-i</span> master^^    // 假设我们当前在master分支</span>
<span class="line"><span class="token comment"># ^ 的用法：在 commit 的后面加一个或多个 ^ 号，可以把 commit 往回偏移，偏移的数量是 ^ 的数量。例如：master^^表示 当前master 指向的 commit 之前倒数第2个 commit</span></span>
<span class="line"><span class="token comment"># ~ 的用法：在 commit 的后面加上 ~ 号和一个数，可以把 commit 往回偏移，偏移的数量是 ~ 号后面的数。例如：master~2 表示的和master^^是一样操作。</span></span>
<span class="line"><span class="token comment"># 接下来可以操作的命令都在上图中显示了，我们要做的是编辑，并且要编辑的是第一行（它的排列顺序是一个正序排序，也就是说旧的commit信息在上面，新的commit在下面），我们将pick改为edit，vim操作大概是输入i -&gt; 将pick改为edit -&gt; esc -&gt; :wq</span></span>
<span class="line"><span class="token function">git</span> commit <span class="token parameter variable">--amend</span></span>
<span class="line"><span class="token function">git</span> rebase <span class="token parameter variable">--continue</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="批量修改已经提交的贡献者和时间戳信息" tabindex="-1"><a class="header-anchor" href="#批量修改已经提交的贡献者和时间戳信息"><span>批量修改已经提交的贡献者和时间戳信息</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> filter-branch --env-filter <span class="token string">&#39;</span>
<span class="line">WRONG_EMAIL=&quot;ReWi@rewi.xyz&quot;</span>
<span class="line">NEW_NAME=&quot;ReWi&quot;</span>
<span class="line">NEW_EMAIL=&quot;RejoiceWindow@yeah.com&quot;</span>
<span class="line"></span>
<span class="line">if [ &quot;$GIT_COMMITTER_EMAIL&quot; = &quot;$WRONG_EMAIL&quot; ]</span>
<span class="line">then</span>
<span class="line">    export GIT_COMMITTER_NAME=&quot;$NEW_NAME&quot;</span>
<span class="line">    export GIT_COMMITTER_EMAIL=&quot;$NEW_EMAIL&quot;</span>
<span class="line">    export GIT_COMMITTER_DATE=&quot;Thu Feb 18 14:00 2021 +0000&quot;</span>
<span class="line">fi</span>
<span class="line">if [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;$WRONG_EMAIL&quot; ]</span>
<span class="line">then</span>
<span class="line">    export GIT_AUTHOR_NAME=&quot;$NEW_NAME&quot;</span>
<span class="line">    export GIT_AUTHOR_EMAIL=&quot;$NEW_EMAIL&quot;</span>
<span class="line">    export GIT_AUTHOR_DATE=&quot;Thu Feb 18 14:00 2021 +0000&quot;</span>
<span class="line">fi</span>
<span class="line">&#39;</span> --tag-name-filter <span class="token function">cat</span> -- <span class="token parameter variable">--branches</span> <span class="token parameter variable">--tags</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="批量更改多个提交者和作者的信息" tabindex="-1"><a class="header-anchor" href="#批量更改多个提交者和作者的信息"><span>批量更改多个提交者和作者的信息</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> filter-branch --env-filter <span class="token string">&#39;</span>
<span class="line">WRONG_EMAIL=&quot;ReWi@rewi.xyz&quot;</span>
<span class="line">NEW_NAME=&quot;ReWi&quot;</span>
<span class="line">NEW_EMAIL=&quot;RejoiceWindow@yeah.com&quot;</span>
<span class="line"></span>
<span class="line">case &quot;$GIT_COMMITTER_EMAIL&quot; in</span>
<span class="line">    &quot;$WRONG_EMAIL&quot;)</span>
<span class="line">        export GIT_COMMITTER_NAME=&quot;$NEW_NAME&quot;</span>
<span class="line">        export GIT_COMMITTER_EMAIL=&quot;$NEW_EMAIL&quot;</span>
<span class="line">        ;;</span>
<span class="line">    &quot;old2@example.com&quot;)</span>
<span class="line">        export GIT_COMMITTER_NAME=&quot;New Name 2&quot;</span>
<span class="line">        export GIT_COMMITTER_EMAIL=&quot;new2@example.com&quot;</span>
<span class="line">        ;;</span>
<span class="line">esac</span>
<span class="line"></span>
<span class="line">case &quot;$GIT_AUTHOR_EMAIL&quot; in</span>
<span class="line">    &quot;$WRONG_EMAIL&quot;)</span>
<span class="line">        export GIT_AUTHOR_NAME=&quot;$NEW_NAME&quot;</span>
<span class="line">        export GIT_AUTHOR_EMAIL=&quot;$NEW_EMAIL&quot;</span>
<span class="line">        ;;</span>
<span class="line">    &quot;old2@example.com&quot;)</span>
<span class="line">        export GIT_AUTHOR_NAME=&quot;New Name 2&quot;</span>
<span class="line">        export GIT_AUTHOR_EMAIL=&quot;new2@example.com&quot;</span>
<span class="line">        ;;</span>
<span class="line">esac</span>
<span class="line">&#39;</span> --tag-name-filter <span class="token function">cat</span> -- <span class="token parameter variable">--branches</span> <span class="token parameter variable">--tags</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="本地项目迁移" tabindex="-1"><a class="header-anchor" href="#本地项目迁移"><span>本地项目迁移</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> remote set-url origin ssh://git@XXX.git</span>
<span class="line"><span class="token function">git</span> push <span class="token parameter variable">-u</span> origin <span class="token parameter variable">--all</span></span>
<span class="line"><span class="token function">git</span> push origin <span class="token parameter variable">--tags</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="提交规范" tabindex="-1"><a class="header-anchor" href="#提交规范"><span>提交规范</span></a></h2><ul><li>feat：新功能（feature）</li><li>fix：修补 bug</li><li>docs：文档（documentation）</li><li>style：格式（不影响代码运行的变动,空格,格式化,等等）</li><li>refactor：重构（即不是新增功能，也不是修改 bug 的代码变动）</li><li>chore：构建过程或辅助工具的变动，对非 src 和 test 目录的修改</li><li>perf: 性能 (提高代码性能的改变)</li><li>test：增加测试或者修改测试</li><li>build: 影响构建系统或外部依赖项的更改(maven,gradle,npm 等等)</li><li>ci: 对 CI 配置文件和脚本的更改</li><li>revert: Revert a commit</li><li><code>types</code> 类型定义文件更改</li><li><code>workflow</code> 工作流改进</li><li><code>wip</code> 开发中</li></ul>`,9);function H(K,U){const a=t("ExternalLinkIcon");return c(),p("div",null,[s("p",null,[n("练习："),s("a",o,[n("https://learngitbranching.js.org/?locale=zh_CN&NODEMO="),e(a)])]),d,s("ul",null,[s("li",null,[s("a",u,[n("http://www.longant.cn/zh-hans/node/6056"),e(a)])]),s("li",null,[s("a",m,[n("https://stackoverflow.com/questions/44833218/extract-package-json-version-using-shell-script"),e(a)])])]),v,s("ul",null,[s("li",null,[s("a",h,[n("https://blog.csdn.net/weixin_48321825/article/details/124431351"),e(a)])])]),b,s("ul",null,[s("li",null,[s("a",g,[n("https://blog.csdn.net/m0_47403102/article/details/122538395"),e(a)]),n(" -")]),s("li",null,[s("a",k,[n("https://blog.csdn.net/m0_47403102/article/details/122538395"),e(a)])]),s("li",null,[s("a",f,[n("https://www.cnblogs.com/linhuaming/p/16290892.html"),e(a)])])]),_,s("blockquote",null,[s("p",null,[n("参考："),s("a",q,[n("https://blog.csdn.net/Zsago/article/details/73618279"),e(a)])])]),x,s("blockquote",null,[s("p",null,[n("分两种情况 参考： "),s("a",E,[n("https://www.jb51.net/article/253630.htm"),e(a)])])]),I,s("blockquote",null,[s("p",null,[n("git log ："),s("a",A,[n("https://blog.csdn.net/qq_34246965/article/details/108414930"),e(a)])])]),T,s("blockquote",null,[s("p",null,[s("a",M,[n("https://blog.csdn.net/Liu_Wd/article/details/120910899"),e(a)]),n(" 注意：历史记录清除后无法回滚。目前这个仓库算是一个新的仓库，以后所有的修改只需要在现在基础上修改。 总结：大概步骤就是把 master 分支复制，删除原有分支，用新的分支覆盖旧分支。从而完成分支替换，清除历史记录。")])]),N,s("blockquote",null,[s("p",null,[s("a",R,[n("https://blog.csdn.net/qq_42670703/article/details/123369326"),e(a)])])]),j,s("p",null,[s("a",w,[n("https://blog.csdn.net/halo1416/article/details/123566471"),e(a)])]),W,s("p",null,[s("a",y,[n("https://blog.csdn.net/qq_20515461/article/details/109270949"),e(a)])]),O,s("p",null,[s("a",G,[n("https://blog.csdn.net/mocoe/article/details/84344411"),e(a)]),n(" 修改之前的任意一次提交")]),L,s("p",null,[s("a",$,[n("https://blog.csdn.net/qq_20515461/article/details/109270949"),e(a)])]),S,s("p",null,[s("a",C,[n("https://www.cnblogs.com/fe-linjin/p/10814935.html"),e(a)])]),D])}const z=l(r,[["render",H],["__file","gittijiaojiqiao.html.vue"]]),F=JSON.parse('{"path":"/blogs/developer/git/gittijiaojiqiao.html","title":"Git提交技巧","lang":"zh-CN","frontmatter":{"title":"Git提交技巧","date":"2023-02-20T00:00:00.000Z","tags":["提交技巧"],"categories":["Git"]},"headers":[{"level":2,"title":"使用 shell 脚本提取 package.json 版本","slug":"使用-shell-脚本提取-package-json-版本","link":"#使用-shell-脚本提取-package-json-版本","children":[]},{"level":2,"title":"分支操作","slug":"分支操作","link":"#分支操作","children":[{"level":3,"title":"查看分支","slug":"查看分支","link":"#查看分支","children":[]},{"level":3,"title":"切换分支","slug":"切换分支","link":"#切换分支","children":[]},{"level":3,"title":"新建分支并切换到指定分支","slug":"新建分支并切换到指定分支","link":"#新建分支并切换到指定分支","children":[]},{"level":3,"title":"把远程分支拉到本地","slug":"把远程分支拉到本地","link":"#把远程分支拉到本地","children":[]},{"level":3,"title":"远程分支上的内容都拉取到本地","slug":"远程分支上的内容都拉取到本地","link":"#远程分支上的内容都拉取到本地","children":[]},{"level":3,"title":"将本地分支推送到远程","slug":"将本地分支推送到远程","link":"#将本地分支推送到远程","children":[]},{"level":3,"title":"git push -u 简单理解","slug":"git-push-u-简单理解","link":"#git-push-u-简单理解","children":[]}]},{"level":2,"title":"Commit code for multiple people","slug":"commit-code-for-multiple-people","link":"#commit-code-for-multiple-people","children":[{"level":3,"title":"git pull 可用","slug":"git-pull-可用","link":"#git-pull-可用","children":[]},{"level":3,"title":"git fetch 不好用","slug":"git-fetch-不好用","link":"#git-fetch-不好用","children":[]}]},{"level":2,"title":"修改远程提交","slug":"修改远程提交","link":"#修改远程提交","children":[]},{"level":2,"title":"删除(分两种情况)","slug":"删除-分两种情况","link":"#删除-分两种情况","children":[{"level":3,"title":"1. 删除最后一次提交","slug":"_1-删除最后一次提交","link":"#_1-删除最后一次提交","children":[]},{"level":3,"title":"2. 删除指定 commit 提交（非最后一次提交）","slug":"_2-删除指定-commit-提交-非最后一次提交","link":"#_2-删除指定-commit-提交-非最后一次提交","children":[]}]},{"level":2,"title":"强制提交","slug":"强制提交","link":"#强制提交","children":[]},{"level":2,"title":"Git 清除贡献者信息和历史提交记录","slug":"git-清除贡献者信息和历史提交记录","link":"#git-清除贡献者信息和历史提交记录","children":[]},{"level":2,"title":"git 仓库迁移不修改","slug":"git-仓库迁移不修改","link":"#git-仓库迁移不修改","children":[]},{"level":2,"title":"git 仓库迁移修改","slug":"git-仓库迁移修改","link":"#git-仓库迁移修改","children":[{"level":3,"title":"git 修改当前项目仓库地址","slug":"git-修改当前项目仓库地址","link":"#git-修改当前项目仓库地址","children":[]},{"level":3,"title":"更新作者","slug":"更新作者","link":"#更新作者","children":[]},{"level":3,"title":"批量修改已经提交的作者和时间戳信息","slug":"批量修改已经提交的作者和时间戳信息","link":"#批量修改已经提交的作者和时间戳信息","children":[]}]},{"level":2,"title":"更新提交记录的贡献者和时间戳","slug":"更新提交记录的贡献者和时间戳","link":"#更新提交记录的贡献者和时间戳","children":[]},{"level":2,"title":"批量更改多个提交者和作者的信息","slug":"批量更改多个提交者和作者的信息","link":"#批量更改多个提交者和作者的信息","children":[]},{"level":2,"title":"本地项目迁移","slug":"本地项目迁移","link":"#本地项目迁移","children":[]},{"level":2,"title":"提交规范","slug":"提交规范","link":"#提交规范","children":[]}],"git":{"createdTime":1732772000000,"updatedTime":1744078224000,"contributors":[{"name":"ReWi","email":"RejoiceWindow@yeah.net","commits":3},{"name":"ReWi","email":"RejoiceWindow@yeah.com","commits":2}]},"filePathRelative":"blogs/developer/git/git提交技巧.md"}');export{z as comp,F as data};
