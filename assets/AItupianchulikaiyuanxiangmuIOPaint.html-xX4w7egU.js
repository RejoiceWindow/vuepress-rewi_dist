import{_ as i,r as l,o as r,c as p,b as a,d as e,e as n,a as t}from"./app-De5JuplM.js";const o={},c=a("h1",{id:"安装",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装"},[a("span",null,"安装")])],-1),d={href:"https://github.com/Sanster/IOPaint",target:"_blank",rel:"noopener noreferrer"},h=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">python3 <span class="token parameter variable">-m</span> pip <span class="token function">install</span> iopaint <span class="token parameter variable">-i</span> https://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="运行" tabindex="-1"><a class="header-anchor" href="#运行"><span>运行</span></a></h1><p>Start webui</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">iopaint start <span class="token parameter variable">--model</span><span class="token operator">=</span>lama <span class="token parameter variable">--device</span><span class="token operator">=</span>cpu <span class="token parameter variable">--host</span><span class="token operator">=</span><span class="token number">0.0</span>.0.0 <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">8080</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="插件" tabindex="-1"><a class="header-anchor" href="#插件"><span>插件</span></a></h1><p>Plugins</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">iopaint start --enable-interactive-seg --interactive-seg-device<span class="token operator">=</span>cuda</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="模糊图像修复插件使用" tabindex="-1"><a class="header-anchor" href="#模糊图像修复插件使用"><span>模糊图像修复插件使用</span></a></h2>`,8),u={href:"https://blog.csdn.net/weixin_44726183/article/details/138667937",target:"_blank",rel:"noopener noreferrer"},m=t(`<h2 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖"><span>安装依赖</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">pip3 <span class="token function">install</span> realesrgan</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="运行-1" tabindex="-1"><a class="header-anchor" href="#运行-1"><span>运行</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">iopaint start --enable-realesrgan --realesrgan-model RealESRGAN_x4plus --realesrgan-device cpu <span class="token parameter variable">--model</span><span class="token operator">=</span>lama <span class="token parameter variable">--device</span><span class="token operator">=</span>cpu <span class="token parameter variable">--host</span><span class="token operator">=</span><span class="token number">0.0</span>.0.0 <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">8080</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,4);function b(g,v){const s=l("ExternalLinkIcon");return r(),p("div",null,[c,a("ul",null,[a("li",null,[e("参考： "),a("a",d,[e("https://github.com/Sanster/IOPaint"),n(s)])])]),h,a("ul",null,[a("li",null,[a("a",u,[e("https://blog.csdn.net/weixin_44726183/article/details/138667937"),n(s)])])]),m])}const _=i(o,[["render",b],["__file","AItupianchulikaiyuanxiangmuIOPaint.html.vue"]]),x=JSON.parse('{"path":"/blogs/developer/AI/AItupianchulikaiyuanxiangmuIOPaint.html","title":"AI图片处理开源项目IOPaint","lang":"zh-CN","frontmatter":{"title":"AI图片处理开源项目IOPaint","date":"2023-03-02T00:00:00.000Z","tags":["AI","IOPaint"],"categories":["Python"]},"headers":[{"level":2,"title":"模糊图像修复插件使用","slug":"模糊图像修复插件使用","link":"#模糊图像修复插件使用","children":[]},{"level":2,"title":"安装依赖","slug":"安装依赖","link":"#安装依赖","children":[]},{"level":2,"title":"运行","slug":"运行-1","link":"#运行-1","children":[]}],"git":{"createdTime":1732772000000,"updatedTime":1744078224000,"contributors":[{"name":"ReWi","email":"RejoiceWindow@yeah.net","commits":4},{"name":"ReWi","email":"RejoiceWindow@yeah.com","commits":2}]},"filePathRelative":"blogs/developer/AI/AI图片处理开源项目IOPaint.md"}');export{_ as comp,x as data};
