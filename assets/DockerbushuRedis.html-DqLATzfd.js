import{_ as l,r as d,o as r,c as t,b as e,e as a,w as n,a as c,d as i}from"./app-De5JuplM.js";const p={},o=e("h1",{id:"目录",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#目录"},[e("span",null,"目录")])],-1),u={class:"table-of-contents"},h=c(`<p>在 Docker 中安装并运行 Redis 非常简单。你可以通过 Docker 来拉取 Redis 官方镜像，并启动一个 Redis 容器。下面是具体步骤：</p><h3 id="_1-拉取-redis-镜像" tabindex="-1"><a class="header-anchor" href="#_1-拉取-redis-镜像"><span>1. 拉取 Redis 镜像</span></a></h3><p>首先，确保你的系统已安装 Docker。然后，运行以下命令来拉取 Redis 官方镜像：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">sudo</span> <span class="token function">docker</span> pull redis</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这将从 Docker Hub 拉取最新版本的 Redis 镜像。如果你需要特定版本的 Redis，可以通过指定版本来拉取。例如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> pull redis:6.2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-启动-redis-容器" tabindex="-1"><a class="header-anchor" href="#_2-启动-redis-容器"><span>2. 启动 Redis 容器</span></a></h3><p>拉取 Redis 镜像后，使用以下命令启动一个 Redis 容器：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">--name</span> redis <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">6379</span>:6379 redis</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这行命令的解释：</p><ul><li><code>--name redis</code>：为容器指定名称为 <code>redis</code>。</li><li><code>-d</code>：以后台模式运行容器。</li><li><code>-p 6379:6379</code>：将容器的 6379 端口映射到宿主机的 6379 端口。Redis 默认使用 6379 端口。</li><li><code>redis</code>：使用 <code>redis</code> 镜像启动容器。</li></ul><h3 id="_3-检查-redis-容器是否运行" tabindex="-1"><a class="header-anchor" href="#_3-检查-redis-容器是否运行"><span>3. 检查 Redis 容器是否运行</span></a></h3><p>运行以下命令查看 Redis 容器的状态：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> <span class="token function">ps</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>你应该会看到类似如下的输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">CONTAINER ID   IMAGE     COMMAND                  CREATED       STATUS       PORTS      NAMES</span>
<span class="line">d3b1f7b7c9b0   redis     &quot;docker-entrypoint.s…&quot;   2 hours ago   Up 2 hours   0.0.0.0:6379-&gt;6379/tcp   redis</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这表示 Redis 容器已成功运行。</p><h3 id="_4-连接到-redis" tabindex="-1"><a class="header-anchor" href="#_4-连接到-redis"><span>4. 连接到 Redis</span></a></h3><p>你可以通过以下命令进入 Redis 容器，并使用 Redis CLI 进行交互：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> redis redis-cli</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这将打开 Redis 命令行界面，你可以在其中执行 Redis 命令。例如，检查 Redis 是否正在运行：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">PING</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果返回 <code>PONG</code>，说明 Redis 正常工作。</p><h3 id="_5-持久化-redis-数据-可选" tabindex="-1"><a class="header-anchor" href="#_5-持久化-redis-数据-可选"><span>5. 持久化 Redis 数据（可选）</span></a></h3><p>默认情况下，Redis 在 Docker 容器内的数据是非持久化的，这意味着容器停止后，Redis 数据会丢失。如果你希望 Redis 数据持久化，可以挂载一个宿主机目录到 Redis 容器的 <code>/data</code> 目录。</p><p>你可以使用如下命令启动 Redis 容器并挂载一个本地目录：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">sudo</span> <span class="token function">docker</span> run <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">-p</span> <span class="token number">6379</span>:6379 <span class="token parameter variable">-v</span> /home/www/redis_data:/data <span class="token parameter variable">--name</span> redis <span class="token parameter variable">-d</span> redis <span class="token parameter variable">--requirepass</span> rejoicewindow</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将 <code>/path/to/local/data</code> 替换为你本地的目录路径。这样，Redis 的数据将会保存在你指定的本地目录中，即使容器停止或删除，数据仍然保留。</p><h3 id="_6-配置-redis-密码-可选" tabindex="-1"><a class="header-anchor" href="#_6-配置-redis-密码-可选"><span>6. 配置 Redis 密码（可选）</span></a></h3><p>为了增加安全性，你可以为 Redis 设置密码。在启动 Redis 容器时，使用 <code>--requirepass</code> 参数来设置密码：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">--name</span> redis <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">6379</span>:6379 <span class="token parameter variable">-e</span> <span class="token assign-left variable">REDIS_PASSWORD</span><span class="token operator">=</span>mysecretpassword redis</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这会将 Redis 密码设置为 <code>mysecretpassword</code>。你可以通过以下命令在 Redis CLI 中验证：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> redis redis-cli <span class="token parameter variable">-a</span> mysecretpassword</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_7-停止和删除-redis-容器" tabindex="-1"><a class="header-anchor" href="#_7-停止和删除-redis-容器"><span>7. 停止和删除 Redis 容器</span></a></h3><p>当你不再需要 Redis 容器时，可以停止并删除它：</p><ul><li>停止容器：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> stop redis</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>删除容器：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">docker</span> <span class="token function">rm</span> redis</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><ol><li>拉取 Redis 镜像：<code>docker pull redis</code></li><li>启动 Redis 容器：<code>docker run --name redis -d -p 6379:6379 redis</code></li><li>进入 Redis CLI：<code>docker exec -it redis redis-cli</code></li><li>可选：设置持久化数据和密码。</li></ol><p>通过这些步骤，你可以轻松在 Docker 中运行 Redis，并根据需要进行配置。如果你有任何问题或需要更多帮助，随时告诉我！</p>`,42);function m(b,v){const s=d("router-link");return r(),t("div",null,[o,e("nav",u,[e("ul",null,[e("li",null,[a(s,{to:"#_1-拉取-redis-镜像"},{default:n(()=>[i("1. 拉取 Redis 镜像")]),_:1})]),e("li",null,[a(s,{to:"#_2-启动-redis-容器"},{default:n(()=>[i("2. 启动 Redis 容器")]),_:1})]),e("li",null,[a(s,{to:"#_3-检查-redis-容器是否运行"},{default:n(()=>[i("3. 检查 Redis 容器是否运行")]),_:1})]),e("li",null,[a(s,{to:"#_4-连接到-redis"},{default:n(()=>[i("4. 连接到 Redis")]),_:1})]),e("li",null,[a(s,{to:"#_5-持久化-redis-数据-可选"},{default:n(()=>[i("5. 持久化 Redis 数据（可选）")]),_:1})]),e("li",null,[a(s,{to:"#_6-配置-redis-密码-可选"},{default:n(()=>[i("6. 配置 Redis 密码（可选）")]),_:1})]),e("li",null,[a(s,{to:"#_7-停止和删除-redis-容器"},{default:n(()=>[i("7. 停止和删除 Redis 容器")]),_:1})]),e("li",null,[a(s,{to:"#总结"},{default:n(()=>[i("总结")]),_:1})])])]),h])}const k=l(p,[["render",m],["__file","DockerbushuRedis.html.vue"]]),R=JSON.parse('{"path":"/blogs/platform/docker/DockerbushuRedis.html","title":"Docker部署Redis","lang":"zh-CN","frontmatter":{"title":"Docker部署Redis","date":"2024/11/30 09:24:00","tags":["项目部署"],"categories":["MySql","docker"]},"headers":[{"level":3,"title":"1. 拉取 Redis 镜像","slug":"_1-拉取-redis-镜像","link":"#_1-拉取-redis-镜像","children":[]},{"level":3,"title":"2. 启动 Redis 容器","slug":"_2-启动-redis-容器","link":"#_2-启动-redis-容器","children":[]},{"level":3,"title":"3. 检查 Redis 容器是否运行","slug":"_3-检查-redis-容器是否运行","link":"#_3-检查-redis-容器是否运行","children":[]},{"level":3,"title":"4. 连接到 Redis","slug":"_4-连接到-redis","link":"#_4-连接到-redis","children":[]},{"level":3,"title":"5. 持久化 Redis 数据（可选）","slug":"_5-持久化-redis-数据-可选","link":"#_5-持久化-redis-数据-可选","children":[]},{"level":3,"title":"6. 配置 Redis 密码（可选）","slug":"_6-配置-redis-密码-可选","link":"#_6-配置-redis-密码-可选","children":[]},{"level":3,"title":"7. 停止和删除 Redis 容器","slug":"_7-停止和删除-redis-容器","link":"#_7-停止和删除-redis-容器","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1735198353000,"updatedTime":1744078224000,"contributors":[{"name":"ReWi","email":"RejoiceWindow@yeah.com","commits":2},{"name":"ReWi","email":"RejoiceWindow@yeah.net","commits":2}]},"filePathRelative":"blogs/platform/docker/Docker部署Redis.md"}');export{k as comp,R as data};
